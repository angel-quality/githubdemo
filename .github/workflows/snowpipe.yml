# This is a basic workflow to help you get started with Actions

name: ServiceNow CI/CD Pipeline with QualityClouds LiveCheck

on:
  pull_request:
  push:
    branches:
      - master

jobs:
  build:
    # Purpose of this job is to Apply Remote Changes for the branch triggering 
    # the pipeline build to the Dev instance, then publish the application to 
    # app repo using the template versioning format. 
    name: Publish from Dev
    runs-on: ubuntu-latest
    # Below line can be used to set conditionals for modifying your pipeline as needed.
    # if: ${{ github.event_name == 'pull_request'}}

    steps:
      - name: QualityClouds CI/CD BuildCheck for Servicenow
        uses: qualityclouds/action-snow-full-scan@0.0.5
        with:
          token: 'eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImp0aSI6ImExYzljNDY3YjdmMjZlZTMxMzE2ZGM4MDVjZjMzZTdiMzBmNWNkMWU5ZTU5NDcxYzE0ODk1NjNiODVmMjkyODkwMzE5MDljYTYyZjg0NGVmIn0.eyJhdWQiOiIyIiwianRpIjoiYTFjOWM0NjdiN2YyNmVlMzEzMTZkYzgwNWNmMzNlN2IzMGY1Y2QxZTllNTk0NzFjMTQ4OTU2M2I4NWYyOTI4OTAzMTkwOWNhNjJmODQ0ZWYiLCJpYXQiOjE2MjYxODI2MjMsIm5iZiI6MTYyNjE4MjYyMywiZXhwIjoxNjU3NzE4NjIzLCJzdWIiOiI4OTQiLCJzY29wZXMiOlsibGl2ZS1jaGVjayJdfQ.kiNWn1La8vqIXNQVz8ypXu5BAbGyTbYnmRYlDWNB69aLZwqdJXVXxSNOrFky_A2mbLaSRZR-yrtqmFFIK_Onci-xvl3MecqR5a1eEBdekYrXpdRoMGv50ZYylPd1xTF-VxKrXz4kM12wVJY_Nhx8gzKPWK4JQS138Nz1bYXWA_fFsZsyshu3Snp90VO9YmhV6cG-FlQe1r_jcZfc_GG7Gf5JVWS2kOSjtqPiLfmQf1SY7_PkMP_n990U4B3QCuPtugms7OlFT4RKQOPl2cTJFPOcjRQaprssBy_YqijNiLZG1zLHehCVkoo3CK6mq2ueSk8bih30nvDjm483m6ozNL4Prpvom8hiYqcGLnNkT134xERxPcDAtMwbxXpdZZbzeKO-0J2yOQWXt2OBboZLCWkwkSYEOfF9HHDdQ6pz4I2in0F1r8dYgj9_vhoAcFZ75WS7qLqZjEsbP0kjNg__0bo6xpRMHZOG2-mnrvpSisxC6_hK37KVPSyxwgtvGgKtzgv5AUR14RqlYutEPli-B7MUh7m__TscDumnepB4GM87aW-LJ9gN3MAAFdQQQzPUKWfIY56nuFRQYLahtfFkjnvlsft1_Op27x5KEs-CS55aDbnefZf8u-0gLYnpvBNHH5ITtQhoV7tMjNxzyx1YK4XC16HfTJdCBht89PT2fas'
          instance_url: 'https://ven02284.service-now.com'
          api_url: 'https://services-development.qualityclouds.com'
          
      - name: ServiceNow CI/CD Apply Changes
        uses: ServiceNow/sncicd-apply-changes@1.0.0
        env:
          snowUsername: ${{ secrets.SN_USERNAME }}
          snowPassword: ${{ secrets.SN_PASSWORD }}
          snowSourceInstance: ${{ secrets.SN_DEV_INSTANCE }}
          appSysID: ${{ secrets.SN_APP_SYSID }}

      - name: ServiceNow CI/CD Publish App
        id: publish_app
        uses: ServiceNow/sncicd-publish-app@1.0.0
        with:
          versionTemplate: 1.1
          versionFormat: template
          # Optional, add +X to version number. Default: 1 
          # incrementBy: X
        env:
          snowUsername: ${{ secrets.SN_USERNAME }}
          snowPassword: ${{ secrets.SN_PASSWORD }}
          snowSourceInstance: ${{ secrets.SN_DEV_INSTANCE }}
          appSysID: ${{ secrets.SN_APP_SYSID }}
          
    # This is required to pass the version number output from Publish App 
    # to the input for Install App in the next job! This is because the jobs 
    # run on different Linux instances, so without this Install App won't know
    # what to install.
    outputs:
      publishversion: ${{ steps.publish_app.outputs.newVersion }}

  test:
    # Purpose of this job is to Install App from the app repo for the version 
    # published in the build job to a Test instance, then run an ATF Test Suite 
    # associated with the app. If Test Suite fails, the app should be Rolled Back 
    # to clean up the persistent Test environment. 
    needs: build
    name: Run ATF in Test
    runs-on: ubuntu-latest
    # Below line can be used to set conditionals for modifying your pipeline as needed.
    # if: ${{ github.event_name == 'pull_request'}}
    
    steps:

      - name: ServiceNow CI/CD Install App
        id: install_app
        uses: ServiceNow/sncicd-install-app@1.0.0
        with:
          version: ${{ needs.build.outputs.publishversion }}
          # Only applicable if Application Customization is active. 
          # Version of the base application on which to apply the customizations
          baseAppVersion: '1.2.3'
          # Only applicable if Application Customization is active and the associated 
          # application is a higher version than the currently installed version
          # Default: false
          autoUpgradeBaseApp: true
        env:
          nowUsername: ${{ secrets.SN_USERNAME }}
          nowPassword: ${{ secrets.SN_PASSWORD }}
          nowInstallInstance: ${{ secrets.SN_TEST_INSTANCE }}
          appSysID: ${{ secrets.SN_APP_SYSID }}

      - name: ServiceNow CI/CD Run ATF Test Suite
        uses: ServiceNow/sncicd-tests-run@1.0.0
        with:
          testSuiteSysId: ${{ secrets.SN_ATFTESTSUITE_SYSID }}
        env:
          nowUsername: ${{ secrets.SN_USERNAME }}
          nowPassword: ${{ secrets.SN_PASSWORD }}
          nowInstallInstance: ${{ secrets.SN_TEST_INSTANCE }}

      - name: ServiceNow CI/CD Rollback App
        if: ${{ failure() && steps.install_app.outputs.rollbackVersion }}
        uses: ServiceNow/sncicd-rollback-app@1.0.0
        with:
          version: ${{steps.install_app.outputs.rollbackVersion}}
        env:
          nowUsername: ${{ secrets.SN_USERNAME }}
          nowPassword: ${{ secrets.SN_PASSWORD }}
          nowInstallInstance: ${{ secrets.SN_TEST_INSTANCE }}
          appSysID: ${{ secrets.SN_APP_SYSID }}

    # This is required to pass the version number output from Publish App 
    # to the input for Install App in the next job! This is because the jobs 
    # run on different Linux instances, so without this Install App won't know
    # what to install.
    outputs:
      publishversion: ${{ needs.build.outputs.publishversion }}

  deployprod:
    # Purpose of this job is to Install App to a Prod instance. This should only 
    # trigger if the feature branch has been merged to master after a successfully 
    # completed pull request, hence the conditional for push to master. In other words,
    # the first two jobs run on CI, then all three jobs run on CD. 
    needs: test
    name: Deploy to Prod
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
    steps:
    
      - name: ServiceNow CI/CD Install App
        id: install_app_prod
        uses: ServiceNow/sncicd-install-app@1.0.0
        with:
          version: ${{ needs.test.outputs.publishversion }}
          # Only applicable if Application Customization is active. 
          # Version of the base application on which to apply the customizations
          baseAppVersion: '1.2.3'
          # Only applicable if Application Customization is active and the associated 
          # application is a higher version than the currently installed version
          # Default: false
          autoUpgradeBaseApp: true
        env:
          nowUsername: ${{ secrets.SN_USERNAME }}
          nowPassword: ${{ secrets.SN_PASSWORD }}
          nowInstallInstance: ${{ secrets.SN_PROD_INSTANCE }}
          appSysID: ${{ secrets.SN_APP_SYSID }}

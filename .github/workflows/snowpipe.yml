# This is a basic workflow to help you get started with Actions

name: ServiceNow CI/CD Pipeline with QualityClouds LiveCheck

on:
  pull_request:
  push:
    branches:
      - master

jobs:
  build:
    # Purpose of this job is to Apply Remote Changes for the branch triggering 
    # the pipeline build to the Dev instance, then publish the application to 
    # app repo using the template versioning format. 
    name: Publish from Dev
    runs-on: ubuntu-latest
    # Below line can be used to set conditionals for modifying your pipeline as needed.
    # if: ${{ github.event_name == 'pull_request'}}

    steps:
      - name: QualityClouds CI/CD BuildCheck for Servicenow
        uses: qualityclouds/action-snow-full-scan@0.0.5
        with:
          token: 'eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImp0aSI6IjQ1N2Y2NzI3ZDZjNjYxM2M0MGUzYzc5MDg3NWIwZTc0OTgyYWI5ZmI0YWUzZDc2NTE4N2VlOWI0MjgwMjg1ZTgzZjc5OTFlMjU4Mzc2NmIzIn0.eyJhdWQiOiIxMyIsImp0aSI6IjQ1N2Y2NzI3ZDZjNjYxM2M0MGUzYzc5MDg3NWIwZTc0OTgyYWI5ZmI0YWUzZDc2NTE4N2VlOWI0MjgwMjg1ZTgzZjc5OTFlMjU4Mzc2NmIzIiwiaWF0IjoxNjA3MDAyNDQ0LCJuYmYiOjE2MDcwMDI0NDQsImV4cCI6MTYzODUzODQ0NCwic3ViIjoiOTkiLCJzY29wZXMiOlsic2NhbiJdfQ.cwuyJ8Lp73Z_4GEPQ7s1KfE5eck8HTrx4edpHRQ7w2MaxX96tosHHXGKJcMDZO3pRSft6s1p8WlOx_ksndl8og4iZ7WHSnG_bI9VOck6etiQUlxC_fixnE6FdyZdXfmWwQFq_bULVVNKJ0Y5_qCGXYUg5hltl2KNk3LC3R505Iol4DSK5B1KeDz5Mq0eSox8d2GicXu3NWNBowqJQ9EigbNsZ3Rxrmnsn5yMqtCq_RvgUXCp-yObM6XlyYt3gpCYo6oy7l4IoTYgfKcSUNDcHMAwWQP-cLGUbPNY0dJsNjNBplnYs635gWkYE8NmtBahTNOXfHWLsE14rTsg-7dyx_7s9AiLeddCtBBXh9G9Vm7QYsFytvYcxlUU20J6GLNTYxof1HtbuNDYYY5XkZHhVloawoe5bX7eeoMd7b6SCMfMP_hV5DIpuNn-ue1ieqa85EMKzJCscJ-SP5-Q-mWB291PGCvIFxKWPO3YDY1RV95LQu6bo1uYNWuxUetJVooMs7j1NPsOzKe3bZK-0wVKJc949HuWTQDCUxFTtsyhhX0D94myHC_07ANv0InUBhtkZunUk0_mORVHIx2fzim1oAOAbxKkJOLvofRUxs2PBQ8XuDlJJg6-Aj1pWU53N56JuQI-pDM037RaC3sjQ1w5ooL4I339iIn3L1RTOYBOK-M'
          instance_url: 'https://ven02284.service-now.com'
          api_url: 'https://services-development.qualityclouds.com'
          
      - name: ServiceNow CI/CD Apply Changes
        uses: ServiceNow/sncicd-apply-changes@1.0.0
        env:
          snowUsername: ${{ secrets.SN_USERNAME }}
          snowPassword: ${{ secrets.SN_PASSWORD }}
          snowSourceInstance: ${{ secrets.SN_DEV_INSTANCE }}
          appSysID: ${{ secrets.SN_APP_SYSID }}

      - name: ServiceNow CI/CD Publish App
        id: publish_app
        uses: ServiceNow/sncicd-publish-app@1.0.0
        with:
          versionTemplate: 1.1
          versionFormat: template
          # Optional, add +X to version number. Default: 1 
          # incrementBy: X
        env:
          snowUsername: ${{ secrets.SN_USERNAME }}
          snowPassword: ${{ secrets.SN_PASSWORD }}
          snowSourceInstance: ${{ secrets.SN_DEV_INSTANCE }}
          appSysID: ${{ secrets.SN_APP_SYSID }}
          
    # This is required to pass the version number output from Publish App 
    # to the input for Install App in the next job! This is because the jobs 
    # run on different Linux instances, so without this Install App won't know
    # what to install.
    outputs:
      publishversion: ${{ steps.publish_app.outputs.newVersion }}

  test:
    # Purpose of this job is to Install App from the app repo for the version 
    # published in the build job to a Test instance, then run an ATF Test Suite 
    # associated with the app. If Test Suite fails, the app should be Rolled Back 
    # to clean up the persistent Test environment. 
    needs: build
    name: Run ATF in Test
    runs-on: ubuntu-latest
    # Below line can be used to set conditionals for modifying your pipeline as needed.
    # if: ${{ github.event_name == 'pull_request'}}
    
    steps:

      - name: ServiceNow CI/CD Install App
        id: install_app
        uses: ServiceNow/sncicd-install-app@1.0.0
        with:
          version: ${{ needs.build.outputs.publishversion }}
          # Only applicable if Application Customization is active. 
          # Version of the base application on which to apply the customizations
          baseAppVersion: '1.2.3'
          # Only applicable if Application Customization is active and the associated 
          # application is a higher version than the currently installed version
          # Default: false
          autoUpgradeBaseApp: true
        env:
          nowUsername: ${{ secrets.SN_USERNAME }}
          nowPassword: ${{ secrets.SN_PASSWORD }}
          nowInstallInstance: ${{ secrets.SN_TEST_INSTANCE }}
          appSysID: ${{ secrets.SN_APP_SYSID }}

      - name: ServiceNow CI/CD Run ATF Test Suite
        uses: ServiceNow/sncicd-tests-run@1.0.0
        with:
          testSuiteSysId: ${{ secrets.SN_ATFTESTSUITE_SYSID }}
        env:
          nowUsername: ${{ secrets.SN_USERNAME }}
          nowPassword: ${{ secrets.SN_PASSWORD }}
          nowInstallInstance: ${{ secrets.SN_TEST_INSTANCE }}

      - name: ServiceNow CI/CD Rollback App
        if: ${{ failure() && steps.install_app.outputs.rollbackVersion }}
        uses: ServiceNow/sncicd-rollback-app@1.0.0
        with:
          version: ${{steps.install_app.outputs.rollbackVersion}}
        env:
          nowUsername: ${{ secrets.SN_USERNAME }}
          nowPassword: ${{ secrets.SN_PASSWORD }}
          nowInstallInstance: ${{ secrets.SN_TEST_INSTANCE }}
          appSysID: ${{ secrets.SN_APP_SYSID }}

    # This is required to pass the version number output from Publish App 
    # to the input for Install App in the next job! This is because the jobs 
    # run on different Linux instances, so without this Install App won't know
    # what to install.
    outputs:
      publishversion: ${{ needs.build.outputs.publishversion }}

  deployprod:
    # Purpose of this job is to Install App to a Prod instance. This should only 
    # trigger if the feature branch has been merged to master after a successfully 
    # completed pull request, hence the conditional for push to master. In other words,
    # the first two jobs run on CI, then all three jobs run on CD. 
    needs: test
    name: Deploy to Prod
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
    steps:
    
      - name: ServiceNow CI/CD Install App
        id: install_app_prod
        uses: ServiceNow/sncicd-install-app@1.0.0
        with:
          version: ${{ needs.test.outputs.publishversion }}
          # Only applicable if Application Customization is active. 
          # Version of the base application on which to apply the customizations
          baseAppVersion: '1.2.3'
          # Only applicable if Application Customization is active and the associated 
          # application is a higher version than the currently installed version
          # Default: false
          autoUpgradeBaseApp: true
        env:
          nowUsername: ${{ secrets.SN_USERNAME }}
          nowPassword: ${{ secrets.SN_PASSWORD }}
          nowInstallInstance: ${{ secrets.SN_PROD_INSTANCE }}
          appSysID: ${{ secrets.SN_APP_SYSID }}
